Facet module and components

  Jahia provides a facet module, with a {{Facets list}} and a {{Site Tag cloud}} component, which make use of the faceting support in the 
  backend. With this an integrator can create templates with faceting support in next to no time.  

* Facets list

  This component can be found under <<Site components -> Facets list>>.
  
  If for instance you want to add a Facets list on the News template, simply open the Studio, select your template-set and then navigate to 
  the news template in the left side-panel. Find the <<Site components -> Facets list>> component and drag&drop it to the 
  <<right column area>>. In the popup click on <<Save>>.
  
[./images/facets/facetslist.png] Facets list component in left side-panel of the Studio
  
  Now you need to bind the component to the area, which displays the list or the query results. Click on the <<Click this to link>> button.
  Release the mouse button (no drag&drop) and move the mouse pointer (should display a chain icon) to the <<Maincontent area>> and click 
  on the area. Now you should see the message <<facets - Linked to: maincontent>> in the component. Notice that when you drop the component in
  edit mode, the component will show that it is automatically bound to "main resource". But in order to make the facet component work, it should
  not be bound to the main resource, but to the resulting list component, so you need to change the automatic bonding. 
  
[./images/facets/linkfacets.png] Link (bind) facets component to mainarea, which will display the list  
  
  Now let's create a facet on the news date. For that we first need to make the property facetable. Modify the definition of <<<jnt:news>>> 
  and add the attribute <<<facetable>>> to the date property. 
  
+----------------------------------------
[jnt:news] > jnt:content, mix:title, jmix:editorialContent, jmix:structuredContent
 - jcr:title (string) i18n mandatory
 - desc (string, richtext) i18n
 - image (weakreference, picker[type='image'])
 - date (date) = now() facetable    
+----------------------------------------

  After that you need to re-index the site. So you have to shutdown the server and manually delete all indexes, like described {{{http://wiki.apache.org/jackrabbit/Search#Rebuilding_the_Index}here}}.  
  Start the server and continue working in the studio modifying the news template. On server restart the index is recreated.
  
  Now in the dropped facets list component select the button in <Add to facets:> <<Abstract facet>>. In the popup choose the <<Date facet>>.
  
  In order to display a facet with news starting from 1.1.2010 until now grouped by month with a label of "month-name (year)", fill out the form 
  with the following values (more infos about all parameters can be found {{{./facetTypes.html}here}}):
  
  <<facet:>> <<<date>>>\
  <<label:>> <<<Date>>>\
  <<field:>> <<<Date (News entry)>>>\
  <<mincount:>> <<<1>>>\
  <<start:>> <<<2010-01-01T00:00:00Z>>>\
  <<end:>> <<<NOW>>>\
  <<hardend:>> <<<true>>>\
  <<format:>> <<<MMMM (yyyy)>>>
  
[./images/facets/datefacet.png] Fill out date facet form  
    
  Click on <<Save>>.
  
  Now you can deploy the template, by choosing in the top-menu <<Deploy templates -> ACME>>.
  
  Go to the news page in for instance <<Preview>> mode (or reload the page if you already had opened it in parallel) and you should see the facet in the right area.
  
[./images/facets/facetinnewspage.png] Facets in news page

  Now when you select a facet value, it will be included as filter when querying the list in the mainarea and you will see the selected
  facet in the active facets area, where you can again remove it, if you want.
  
[./images/facets/activefacet.png] Active facet in news page      

** Drill-down urls

  For applying facet values as filters, we are using a query parameter named "N-<boundcomponent.name>" and we are encoding the value of the parameter as for query
  facets the parameter is a Lucene query string. For some customers it could be a security hole if end-users would see the Lucene query and try to modify it, in order to 
  get access to other data. If you would like to have shorter URLs, you could also implement a mapping of certain keys to facet values or queries on your own.    

** Applying and displaying facets

  The applied facets are acting as filters on top of the regular query creating the list. This functionality is implemented in Jahia's default module in the file
  <<<jmix_list\html\list.hidden.header.jsp>>>, where the list and the facets are getting loaded. 
  
  The display of the applied facet values and the remaining facets is then implemented in the facets module's <<<jnt_facets\html\facets.jsp>>>. 

* Site Tag cloud

  The second out-of-the-box component using faceting in the backend is the tag cloud, which can be found under <<Site components -> Site Tag cloud>>.
  
  This component can either be dropped to a page in <<Edit>> mode, or to a template in the <<Studio>>, but if you do the latter, you will have to still link the site's search 
  <<results page>> to the component in <<Edit>> mode.  
  
[./images/facets/edittagcloud.png] Edit tag cloud component  

  Setting the search <<results page>> is needed to create the URLs on the tags in the cloud, so that they point to a proper page, which is able to display the
  resulting components using the selected tag.
  Besides this setting you can also specify the <<threshold>> to define the minimum number of references a tag must have for being displayed in the cloud.
  In the <<limit>> property you set the maximum number of tags displayed in the cloud.
  
  In order to use the tag cloud in the ACME demo, you first need to apply some tags to content objects. The font-size of the tags in the cloud depends on the
  number of times a tag is used in the site. The bigger the font, the higher the usage and the number of content objects in the result list, when clicking on the tag. 
  
  The tag cloud component is implemented in the facets module's <<<jnt_tagCloud\html\tagCloud.jsp>>>.    