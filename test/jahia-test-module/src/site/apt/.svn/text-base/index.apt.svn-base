Jahia Test Package

* Requirements

- JMeter 2.4 or more recent
- JDK 5 minimum
- A default Jahia 6.6 installation, as delivered by either compiling it from source (including configuration), or
installed with the package installer.
- If you are on windows, this will run only under CYGWIN

* JUnit test

 Jahia can execute JUnit test inside tomcat's context. Tests need to be deployed into Jahia, and can be executed
 through maven. If you are doing this from the source code, make sure you have deployed the test project
 (not deployed by default), you can do this by going into the test/ directory and typing : mvn clean install jahia:deploy

 First you need to modify your settings.xml file in order to point to your Jahia instance :

+--------------------
<jahia.test.url>http://localhost:8080/jahia/cms</jahia.test.url>
+--------------------

 Then execute maven with the testJahia profile enabled :

+--------------------
 mvn -P jahia-test install jahia:deploy
+--------------------

 If you want to execute a single test, you can use the test system parameter with the class name of the test to
 execute. For example :

+--------------------
 mvn -P jahia-test -o -Dtest=org.jahia.services.content.ContentTest jahia:test surefire-report:report-only
+--------------------

 will execute one single test, ContentTest.

  If you want to execute all tests :

+--------------------
 mvn -P jahia-test jahia:test
+--------------------

 will execute one single test, ContentTest.

* Jmeter test

** Jmeter configuration

 You can execute JMeter tests on your running tomcat. The provided JMeter tests have been designed be executed on
 site generated by the content generator - but you should be able to run them on any site.

 First you need to define where your jmeter is installed on your platform inside your settings.xml :

+---------------------------
<jahia.test.jmeter.path>/usr/local/java/jakarta-jmeter-2.3.4</jahia.test.jmeter.path>
+---------------------------

 And add database information :

+---------------------------
<jahia.test.jmeter.dbip>localhost</jahia.test.jmeter.dbip>
<jahia.test.jmeter.dbname>jmeter</jahia.test.jmeter.dbname>
<jahia.test.jmeter.dbusername>root</jahia.test.jmeter.username>
<jahia.test.jmeter.dbpassword></jahia.test.jmeter.password>
+---------------------------

 Password and username of jahia database will be used (?)

 You also need to add some parameters for jmeter :

+---------------------------
<jahia.test.jmeter.username>root</jahia.test.jmeter.username>
<jahia.test.jmeter.password>root1234</jahia.test.jmeter.password>
<jahia.test.jmeter.context>/jahia</jahia.test.jmeter.context>
<jahia.test.jmeter.loops>3</jahia.test.jmeter.loops>
<jahia.test.jmeter.threads>1</jahia.test.jmeter.threads>
+---------------------------

 Add the sitemap and users files, and the site key you want to use :
+---------------------------
<jahia.test.jmeter.sitemap>sitemap.txt</jahia.test.jmeter.sitemap>
<jahia.test.jmeter.users>users.txt</jahia.test.jmeter.users>
<jahia.test.jmeter.sitekey>testSite</jahia.test.jmeter.sitekey>
+---------------------------
 The sitemap contains one line per page that can be used by the scripts. The users file contains one line per user.
 The password should be identical to the username. If no users file is provided, all tests will be executed as guest.

 You can specify an optional import file that will be copied before the test. You'll need to specify the time
 maven will wait for the import to finish before starting the tests :
+---------------------------
<jahia.test.jmeter.importfile>import.zip</jahia.test.jmeter.importfile>
<jahia.test.jmeter.importwait>90</jahia.test.jmeter.importwait>
+---------------------------
 But you can also execute the import separately, if you want to run multiple tests on the same site. Just copy the
 import.zip file in the WEB-INF/var/imports folder of your jahia server and wait to the site to be imported.

 Some test will require additional parameters - the readPages.jmx require the workspace and mode to use :
+---------------------------
<jahia.test.jmeter.workspace>default</jahia.test.jmeter.workspace>
<jahia.test.jmeter.mode>render</jahia.test.jmeter.mode>
+---------------------------

 Note that you'll have to set privileged right to users group in order to perform test on default workspace (within the interfaces
 of jahia in edit mode, edit site node, roles tab)

** Running tests

 The maven script take care of copying all the files found inside src/main/scripts/jmeter to your jmeter installation
 under jmeter_path/bin/testPlan.

 If no sitemap file is provided, maven will ask jahia the sitemap of the site.

 To execute the jmeter test just run : mvn -P jmeterTest install

 A single  jmeter test can be executed by adding the -Dtest parameter to the command line, with the name of the jmeter  
 test folder :

 mvn -Dtest=readPages -P jmeterTest install

 If you want to launch the JMeter GUI - which can be useful to debug the tests and change some parameters, you can also
 add the -Dgui parameter :

 mvn -Dgui -Dtest=readPages -P jmeterTest install

** Developing a jmeter test

 Every JMeter has a folder in scripts/jmeter with one or more .jmx file and a test.properties file. The test.properties
 file allows you to add custom parameters to the execution of the jmeter. The whole content of test.properties will be
 added tho the jmeter command line.

* Content generator usage

Modify you settings.xml to add the content generator configuration :

+----------------------------
<jahia.cg.outputDirectory>generatedsite</jahia.cg.outputDirectory>
<jahia.cg.mysql.host>host</jahia.cg.mysql.host>
<jahia.cg.mysql.login>root</jahia.cg.mysql.login>
<jahia.cg.mysql.password>pass</jahia.cg.mysql.password>
<jahia.cg.mysql_db>wikipedia_articles</jahia.cg.mysql_db>
<jahia.cg.mysql_table>articles_light</jahia.cg.mysql_table>
<jahia.cg.nbPagesOnTopLevel>9</jahia.cg.nbPagesOnTopLevel>
<jahia.cg.nbSubLevels>2</jahia.cg.nbSubLevels>
<jahia.cg.nbPagesPerLevel>10</jahia.cg.nbPagesPerLevel>
<jahia.cg.numberOfBigTextPerPage>3</jahia.cg.numberOfBigTextPerPage>
<jahia.cg.addFiles>all</jahia.cg.addFiles>
<jahia.cg.numberOfFilesToGenerate>100</jahia.cg.numberOfFilesToGenerate>
<jahia.cg.numberOfUsers>1000</jahia.cg.numberOfUsers>
<jahia.cg.numberOfGroups>10</jahia.cg.numberOfGroups>
<jahia.cg.numberOfUsersPerGroup>100</jahia.cg.numberOfUsersPerGroup>
<jahia.cg.groupsAclRatio>0.1</jahia.cg.groupsAclRatio>
<jahia.cg.usersAclRatio>0.1</jahia.cg.usersAclRatio>
<jahia.cg.numberOfSites>1</jahia.cg.numberOfSites>
+-------------------------

You can add this to a profile, and create as many content generator configuration as you need.

Then call the site generation :

mvn jahia:generate-site

This will generate an import.zip, a sitemap.txt and users.txt in specified folder.

* Execute tests in automated environment

 A profile startJahia is defined to help execution of tests automatically. This profile will configure jahia, start
 tomcat, execute test tasks, then stops jahia and delete it. This need to be combined with other profiles / tasks
 (testJahia, jmeterTest) .

