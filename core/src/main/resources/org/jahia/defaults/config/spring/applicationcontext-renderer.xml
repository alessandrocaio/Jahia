<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <bean class="org.jahia.services.render.RenderService$RenderServiceBeanPostProcessor"/>

	<bean id="RenderService" class="org.jahia.services.render.RenderService" factory-method="getInstance">
		<property name="templateManagerService" ref="JahiaTemplateManagerService" />
		<property name="scriptResolvers">
			<list>
				<bean class="org.jahia.services.render.scripting.FileSystemScriptResolver">
					<property name="scriptExtensionsOrdering">
						<list>
							<value>jsp</value>
							<value>groovy</value>
							<value>js</value>
							<value>php</value>
							<value>vm</value>
							<value>fm</value>
						</list>
					</property>
                    <property name="templateManagerService" ref="JahiaTemplateManagerService" />
				</bean>
			</list>
		</property>
        <property name="cacheKeyGenerator" ref="cacheKeyGenerator"/>
        <property name="cacheProvider" ref="ehCacheProvider"/>
	</bean>

	<bean
		class="org.jahia.services.render.filter.portlet.PlutoProcessActionFilter">
		<property name="priority" value="-3" />
        <property name="description" value="portlet rendering"/>
		<property name="applyOnConfigurations" value="page" />
	</bean>
	<!--
	<bean class="org.jahia.services.render.filter.SourceFormatterFilter">
		<property name="priority" value="-2" />
        <property name="description" value="HTML output formatting filter"/>
		<property name="applyOnModes" value="live,preview" />
		<property name="applyOnConfigurations" value="page" />
		<property name="applyOnTemplateTypes" value="html,edit,html-iphone" />
	</bean>
	-->
	<bean class="org.jahia.services.render.filter.ExternalizeHtmlFilter">
		<property name="priority" value="-1" />
        <property name="description" value="Render filter that 'externalizes' the HTML document by converting all local URLs into absolute, inlining external CSS styles, and rewriting URLs in CSS."/>
		<property name="applyOnModes" value="live,preview" />
		<property name="applyOnConfigurations" value="page" />
		<property name="htmlExternalizationService" ref="HtmlExternalizationService" />
	</bean>
	<bean class="org.jahia.services.render.filter.StaticAssetsFilter">
		<property name="priority" value="0" />
        <property name="description" value="Render filter that 'injects' the static assets into the HEAD section of the rendered HTML document."/>
		<property name="applyOnConfigurations" value="page,gwt" />
		<property name="applyOnTemplateTypes" value="html,edit,html-iphone" />
        <property name="scriptEngineUtils" ref="scriptEngineUtils"/>
        <property name="ajaxTemplate" value="/modules/assets/WEB-INF/scripts/ajaxResources.groovy"/>
        <property name="template" value="/modules/assets/WEB-INF/scripts/resources.groovy"/>
        <property name="aggregateAndCompress" value="${aggregateAndCompressAssets:true}"/>
        <property name="excludesFromAggregateAndCompress">
            <list>
                <value>/modules/assets/javascript/ckeditor/ckeditor.js</value>
            </list>
        </property>
	</bean>
	<bean class="org.jahia.services.render.filter.MetricsLoggingFilter">
		<property name="priority" value="3" />
        <property name="description" value="Calls the logging service to log the display of a resource. Also initializes profiling information"/>
		<property name="loggingService" ref="loggingService" />
		<property name="skipOnConfiguration" value="include,wrapper" />
	</bean>
    <bean
        class="org.jahia.services.render.filter.AreaResourceFilter">
        <property name="description" value="Set attributes areaListResource and areaResource in the request"/>
        <property name="applyOnNodeTypes" value="jnt:area,jmix:list,jnt:mainResourceDisplay" />
        <property name="applyOnConfigurations" value="module,wrappedcontent" />
        <property name="priority" value="4" />
    </bean>

	<bean class="org.jahia.services.render.filter.UserAgentFilter">
		<property name="priority" value="6" />
        <property name="description" value="Set templateType depending of the user agent"/>
		<property name="applyOnModes" value="live,preview" />
		<property name="applyOnConfigurations" value="page" />
		<property name="userAgentMatchingRules">
			<map>
				<entry key=".*iPhone.*" value="iphone" />
				<entry key=".*iPod.*" value="iphone" />
                <entry key=".*iPad.*" value="iphone" />
                <entry key=".*Android.*" value="iphone" />
			</map>
		</property>
	</bean>

    <bean class="org.jahia.services.render.filter.MarkedForDeletionFilter">
        <property name="priority" value="10" />
        <property name="description" value="Filters out content in preview mode that is marked for deletion"/>
        <property name="applyOnModes" value="preview" />
        <property name="template" value="/modules/assets/WEB-INF/scripts/markedForDeletionPreview.groovy"/>
    </bean>

	<bean class="org.jahia.services.render.filter.BaseAttributesFilter">
		<property name="priority" value="15" />
        <property name="description" value="Stores the required request parameters before evaluating the template and restores original after."/>
	</bean>
    
    <bean id="markedForDeletionEditModeFilter" class="org.jahia.services.render.filter.MarkedForDeletionEditModeFilter">
        <property name="priority" value="17" />
        <property name="description" value="Adds overlays for modules in edit mode that are marked for deletion"/>
        <property name="applyOnModes" value="edit" />
        <property name="applyOnConfigurations" value="gwt" />
        <property name="template">
            <value><![CDATA[<div class="ext-el-mask" style="display: block;"></div>
                <div class="ext-el-mask-msg" style="display: block; margin-left:47%; margin-top: 30%;">
                <div style="cursor: default; font-weight: bold; color: red; text-transform: uppercase;">{0}</div>
                </div>{1}]]></value>
        </property>
    </bean>
    
	<bean
		class="org.jahia.services.render.filter.URLSystemAttributesAppenderFilter">
		<property name="priority" value="20" />
        <property name="description" value="Defines attributes to keep in the links of a rendering when met in the urls"/>
		<property name="applyOnConfigurations" value="page" />
		<property name="applyOnTemplateTypes" value="html,edit,html-iphone" />
		<property name="skipOnAjaxRequest" value="true" />
		<property name="attributesToKeep">
			<list>
				<value type="java.lang.String">v</value>
				<value type="java.lang.String">l</value>
				<value type="java.lang.String">alias</value>
			</list>
		</property>
		<property name="traverser"
			ref="org.jahia.services.render.filter.URLTraverser" />
	</bean>
	<bean class="org.jahia.services.render.filter.URLFilter">
		<constructor-arg ref="org.jahia.services.render.filter.URLTraverser" />
		<property name="priority" value="21" />
        <property name="description" value="Traverses the content and searches for URLs in the configured elements. Executes the list of configured visitors (ContextPlaceholdersReplacer, VanityUrlSetter and SiteParameterAdder) to modify the URL value."/>
		<property name="applyOnConfigurations" value="page,gwt,module,wrappedcontent" />
		<property name="handlers">
			<list>
				<bean class="org.jahia.services.render.filter.ContextPlaceholdersReplacer" />
                <bean class="org.jahia.services.render.filter.cache.CacheUrlDependenciesParserFilter">
                    <property name="urlResolverFactory" ref="urlResolverFactory" />
				</bean>
				<bean class="org.jahia.services.seo.filter.VanityUrlSetter">
					<property name="vanityUrlService"
						ref="org.jahia.services.seo.jcr.VanityUrlService" />
                    <property name="urlResolverFactory" ref="urlResolverFactory" />
				</bean>
                <bean class="org.jahia.services.render.filter.SiteParameterAdder" />
                
			</list>
		</property>
	</bean>

	<bean class="org.jahia.services.render.filter.TemplateNodeFilter">
		<property name="priority" value="22" />
        <property name="description" value=" Looks for all registered wrappers in the resource and calls the associated scripts around the output. Output is made available to the wrapper script through the 'wrappedContent' request attribute."/>
		<property name="applyOnConfigurations" value="wrappedcontent,page,gwt" />
		<property name="applyOnTemplateTypes" value="html,edit,html-iphone" />
	</bean>

	<bean class="org.jahia.services.render.filter.TemplatePermissionCheckFilter">
		<property name="priority" value="28" />
        <property name="description" value="Handles permissions set on the template"/>
	</bean>
	<bean class="org.jahia.services.render.filter.TemplateAttributesFilter">
		<property name="priority" value="30" />
        <property name="description" value="Module filter for parameter resolution."/>
	</bean>
	<bean class="org.jahia.services.render.filter.WrapperFilter">
		<property name="priority" value="40" />
        <property name="description" value="Adds a wrapper to a content"/>
		<property name="skipOnConfiguration" value="include,wrapper" />
		<property name="skipOnAjaxRequest" value="true" />
	</bean>
	<bean class="org.jahia.services.render.filter.TemplateScriptFilter">
		<property name="priority" value="99" />
        <property name="description" value="Executes the template script associated to the current resource. This is a final filter, subsequent filters will not be chained."/>
	</bean>

    <bean id="org.jahia.services.render.filter.URLTraverser" class="org.jahia.services.render.filter.HtmlTagAttributeTraverser">
        <constructor-arg>
            <map>
                <entry key="a">
                    <set><value>href</value></set>
                </entry>
                <entry key="embed">
                    <set><value>src</value></set>
                </entry>
                <entry key="form">
                    <set><value>action</value></set>
                </entry>
                <entry key="img">
                    <set><value>src</value></set>
                </entry>
                <entry key="link">
                    <set><value>href</value></set>
                </entry>
                <entry key="param">
                    <set><value>value</value></set>
                </entry>
            </map>
        </constructor-arg>
    </bean>

    <bean id="gwtCssStyles" class="org.springframework.beans.factory.config.ListFactoryBean">
        <property name="sourceList">
            <list>
                <value>/gwt/resources/css/gwt-1.1.min.css</value>
            </list>
            <!-- comment out gwt.css and uncomment the following CSS if you are in dev mode and are working on modifying those CSSs
            <list>
                <value>/gwt/resources/css/jahia-ext-all.css</value>
                <value>/gwt/resources/css/xtheme-jahia.css</value>
                <value>/gwt/resources/css/edit.css</value>
                <value>/gwt/resources/css/jahia-gwt-engines.css</value>
                <value>/gwt/resources/css/diff.css</value>
            </list>
            -->
        </property>
    </bean>

    <bean id="urlResolverFactory" class="org.jahia.services.render.URLResolverFactory">
        <property name="cacheService" ref="JahiaCacheService" />
        <property name="urlResolverListener" ref="urlResolverListener" />
    </bean>

    <bean id="visibilityFilter" class="org.jahia.services.visibility.filters.VisibilityFilter">
        <property name="description" value="Content visibility filter that conditionally filters out the content depending on the configured rules."/>
        <property name="visibilityService" ref="visibilityService"/>
        <property name="applyOnModes" value="preview"/>
        <property name="priority" value="29"/>
    </bean>
</beans>