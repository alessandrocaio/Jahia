Using permissions

  Jahia provides ways to utilize the role/permission concept in JSP templates as well as in custom Java services.
  
* {JSP} templates

  With functions included in the <Jahia JCR> taglib (uri: <<<http://www.jahia.org/tags/jcr>>>)
  template developers can restrict access to particular areas of their templates.
  
  Here is a simple example that show the usage of such a function:
  
+-------------
    <c:if test="${jcr:hasPermission(currentNode,'jcr:write')}">
      The user is allowed to modify the node
    </c:if>
+-------------

  Notice that the permission is used without the workspace name suffix, this is because Jahia will automatically 
  attach the current workspace name when resolving the permission. 
    
* {Java} API

  A permission is always checked for a user on a specific node. The JCR <<<AccessControlManager>>> API provides a method to check
  permissions on a node :

+---------------------
    boolean AccessControlManager.hasPrivileges(String absPath, Privilege[] privileges)
+---------------------

  A convenient method is also provided in JCRNodeWrapper to check a single permission :

+---------------------
    boolean hasPermission(String permission)
+---------------------

  Global permissions are checked on the root node. Site permissions can be checked on the site node.

* Custom {actions}

  If the property <<<requiredPermission>>> is set on an action, the Jahia controller will check the permission before
  trying to call the <<<doExecute>>> method.

  For instance, the action to create a new blog entry is defined with the <<<requiredPermission>>> property :

+---------------------
    <bean class="org.jahia.modules.blog.AddBlogEntryAction">
        <property name="name" value="addBlogEntry"/>
        <property name="requiredPermission" value="addBlogEntry"/>
    </bean>
+---------------------

* {Views}

  The properties file associated to a view can contain a <<<requirePermissions>>> property. If this property is set, the
  RenderService will check that permission before calling the script.

  In the example module <<<contact>>>, the file contactForm.properties associated to contactForm.jsp contains the following line :

+-----------------
    requirePermissions=viewContacts
+-----------------


