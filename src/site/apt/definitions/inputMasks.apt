Input masks

    Among the extensions to the JCR standard definitions,
    Jahia allows definitions to include « hints » to generate the input forms.
    Depending on the property type, a corresponding input field will be provided.
    It is possible to override the default input field by adding a specifier after
    the type definition.

* Usage :

+----------------------
- field-name (type)
- field-name (type,mask)
- field-name (type,mask[options])
+----------------------

    where

        - type is one of : string, long, double, decimal, path, uri, boolean, date, binary, weakreference

        - mask is one of : text, richtext, textarea, choicelist, datetimepicker, datepicker, picker, color,
        category, checkbox

        - options are relative to the mask, you can chain them using a coma as separator. Example : [option1, option2]

* default input field :

    ** for string, long, double, decimal, path, uri :

        will display an input text field on a single line

    ** for boolean :

        will display a checkbox

    ** for date :

        will display a date picker

    ** for weakreference :

        will display a selector

* custom input field :

    You can change the default display of a screen

    ** text :

        will display a single line form

    ** richtext :

        will display ckeditor

    ** textarea :

        will display a multiline area

    ** choicelist :

        will display a  drop down list with values define by the default value set or options.
        The {{{../initializers_renderers/initializers.html} choiceLists initializers}} defined by default are :
        resourceBundle, country, templates, templatesNode, users, nodetypes, subnodetypes, nodes, menus, script, flag,
        sortableFieldnames, moduleImage, linkerProps, workflow, workflowTypes, sort and componenttypes.

+----------------------
 - firstField (string, choicelist[sortableFieldnames]) < 'true', 'false'
 - play (string, choicelist[resourceBundle]) < 'true', 'false'
 - templateForLink (string, choicelist[templates,resourceBundle])
 - nodeType (string, choicelist[subnodetypes = 'jnt:page,jnt:contentList,jnt:folder',resourceBundle])
+----------------------

    ** datetimepicker :

        will display a single line field and a calendar to select date and time

    ** datepicker :

        will display a single line field and a calendar to select date

    ** picker :

        will display a picker, depending of the option. The picker types defined by default are : file, image, folder,
        contentfolder, portlet, page, editorial, editoriallink, category, site, user and usergroup

+----------------------
 - source (weakreference, picker[type='file'])
 - image (weakreference, picker[type='image'])
 - j:node (weakreference, picker[type='contentfolder'])
+----------------------

    ** color :

        will display a color picker

    ** category :

        will display a category picker

    ** checkbox :

        will display a checkbox